/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AddNewProject.java
 *
 * Created on Mar 14, 2013, 11:37:05 AM
 */
package vn.com.hkt.gui.panel.spi;

import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import vn.com.hkt.data.entity.Department;
import vn.com.hkt.data.entity.Enterprise;
import vn.com.hkt.data.entity.Project;
import vn.com.hkt.gui.control.api.IPanelControlGeneral;
import vn.com.hkt.gui.entity.api.IShowPanel;
import vn.com.hkt.provider.api.IProviderPanelShowProject;
import vn.com.hkt.provider.spi.ProviderPanelShowProject;

/**
 *
 * @author Administrator
 */
public class AddNewProject extends javax.swing.JPanel implements IShowPanel<Project> {

    private long departmentID;
    private long enterpriseID;
    private IProviderPanelShowProject provider;
    private IPanelControlGeneral controlGeneral;

    /** Creates new form AddNewProject */
    public AddNewProject() {
        initComponents();
        provider = new ProviderPanelShowProject();
        loadEnterprise();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbTitle = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtProjectName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        dateEnd = new com.toedter.calendar.JDateChooser();
        dateStart = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cbDepartment = new javax.swing.JComboBox();
        cbEnterprise = new javax.swing.JComboBox();
        lbError = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtCode = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, java.awt.Color.gray));

        lbTitle.setFont(new java.awt.Font("Tahoma", 1, 18));
        lbTitle.setForeground(new java.awt.Color(102, 102, 102));
        lbTitle.setText("Add New Project");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Description :");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("Project name :");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Date start :");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setText("Department :");

        txtDescription.setColumns(20);
        txtDescription.setRows(5);
        jScrollPane1.setViewportView(txtDescription);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel9.setForeground(new java.awt.Color(102, 102, 102));
        jLabel9.setText("Date end :");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel10.setForeground(new java.awt.Color(102, 102, 102));
        jLabel10.setText("Enterprise :");

        cbDepartment.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbDepartment.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbDepartmentItemStateChanged(evt);
            }
        });

        cbEnterprise.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbEnterprise.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbEnterpriseItemStateChanged(evt);
            }
        });

        lbError.setFont(new java.awt.Font("Tahoma", 0, 12));
        lbError.setForeground(new java.awt.Color(255, 0, 0));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel11.setForeground(new java.awt.Color(102, 102, 102));
        jLabel11.setText("Code :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lbTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(txtCode, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addGap(109, 109, 109))
            .addGroup(layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(txtProjectName, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addGap(109, 109, 109))
            .addGroup(layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(dateStart, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addGap(109, 109, 109))
            .addGroup(layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(dateEnd, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addGap(109, 109, 109))
            .addGroup(layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(cbEnterprise, 0, 200, Short.MAX_VALUE)
                .addGap(109, 109, 109))
            .addGroup(layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(cbDepartment, 0, 200, Short.MAX_VALUE)
                .addGap(109, 109, 109))
            .addGroup(layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                .addGap(109, 109, 109))
            .addGroup(layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(lbError, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                .addGap(94, 94, 94))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lbTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtProjectName, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateStart, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbEnterprise, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                .addGap(11, 11, 11)
                .addComponent(lbError, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
    }// </editor-fold>//GEN-END:initComponents

private void cbEnterpriseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbEnterpriseItemStateChanged
    loadCBEnterprise();


}//GEN-LAST:event_cbEnterpriseItemStateChanged

    private void loadCBEnterprise() {
        Enterprise e = (Enterprise) cbEnterprise.getSelectedItem();
        if (e != null) {
            if (e.getId() > 0) {
                cbDepartment.setEnabled(true);
                enterpriseID = e.getId();
                loadDepartment();
                loadCBDepartment();
            } else {
                enterpriseID = 0;
            }
        } else {
            cbDepartment.setEnabled(false);
        }
    }

    private void loadCBDepartment() {
        int index = cbEnterprise.getSelectedIndex();
        if (index > 0) {
            Department d = (Department) cbDepartment.getSelectedItem();
            if (d != null) {
                if (d.getId() > 0) {
                    departmentID = d.getId();
                } else {
                    departmentID = 0;
                }
            } else {
                departmentID = 0;
            }
        } else {
            departmentID = 0;
        }
    }

private void cbDepartmentItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbDepartmentItemStateChanged
    loadCBDepartment();
}//GEN-LAST:event_cbDepartmentItemStateChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbDepartment;
    private javax.swing.JComboBox cbEnterprise;
    private com.toedter.calendar.JDateChooser dateEnd;
    private com.toedter.calendar.JDateChooser dateStart;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbError;
    private javax.swing.JLabel lbTitle;
    private javax.swing.JTextField txtCode;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextField txtProjectName;
    // End of variables declaration//GEN-END:variables

//    @Override
//    public void showDefault() {
//        loadEnterprise();
//    }
    @Override
    public boolean checkData() {

        if (cbEnterprise.getSelectedIndex() == 0) {
            lbError.setText("Choose enterprise !");
            return false;
        }
        if (txtCode.getText().length() == 0) {
            lbError.setText("Enter code project !");
            return false;
        }
        if (cbEnterprise.getSelectedItem() == null) {
            lbError.setText("Choose enterprise !");
            return false;
        }
        if (txtProjectName.getText().length() == 0) {
            return false;
        }
        if (dateEnd.getDate() == null) {
            return false;
        }
        if (dateStart.getDate() == null) {
            return false;
        }
        return true;
    }

    @Override
    public long addData() {
        if (!checkData() || !getData()) {
            return -1;
        } else {
            return provider.addData();
        }
    }

    @Override
    public boolean editData() {
        if (JOptionPane.showConfirmDialog(null, "Are you sure !", "Edit", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            if (!checkData() || !getData()) {
                return false;
            }
            long id = provider.updateData();
            if (id < 0) {
                return false;
            }
            return true;
        }
        return false;
    }

    @Override
    public boolean deleteData() {
        if (JOptionPane.showConfirmDialog(null, "Are you sure !", "Delete", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            provider.deleteData();
            resetData();
            return true;
        }
        return false;
    }

    private boolean getData() {
        try {
            provider.getDataView().setCodeProject(txtCode.getText());
            provider.getDataView().setName(txtProjectName.getText());
            provider.getDataView().setDateEnd(dateEnd.getDate());
            provider.getDataView().setDateStart(dateStart.getDate());
            provider.getDataView().setDescript(txtDescription.getText());
            provider.getDataView().setIdDepartment(departmentID);
            provider.getDataView().setIdEnterprise(enterpriseID);
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    private void loadEnterprise() {
         List<Enterprise> enterprises = provider.getListEnterprise();
        if (enterprises != null) {
            cbEnterprise.setModel(new DefaultComboBoxModel(enterprises.toArray()));
            loadCBEnterprise();
        } else {
            lbError.setText("No enterprise");
        }
    }

    private void loadDepartment() {
        if (enterpriseID > 0) {
            List<Department> departments = provider.getListDepartmentByIDEnt(enterpriseID);
            cbDepartment.setModel(new DefaultComboBoxModel(departments.toArray()));
        } else {
            cbDepartment.enable(false);
        }
    }

    @Override
    public boolean resetData() {
        txtProjectName.setText("");
        txtCode.setText("");
        txtDescription.setText("");
        cbEnterprise.setSelectedIndex(0);
        dateStart.setDateFormatString("");
        dateEnd.setDateFormatString("");
        provider.setDataView(null);
        return true;
    }

    @Override
    public List<Project> listA() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public List<Project> listCombo() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void setDataShow(Project ob) {
        provider.setDataView(ob);
        refreshData();
    }

    @Override
    public void refreshData() {
        lbTitle.setText("Update Project");
        txtProjectName.setText(provider.getDataView().getName());
        txtCode.setText(provider.getDataView().getCodeProject());
        txtDescription.setText(provider.getDataView().getDescript());
        dateStart.setDate(provider.getDataView().getDateStart());
        dateEnd.setDate(provider.getDataView().getDateEnd());
        //set combo box enterprise
        long idEnter = provider.getDataView().getIdEnterprise();
        for (int i = 0; i < cbEnterprise.getItemCount();) {
            Enterprise enter = ((Enterprise) cbEnterprise.getItemAt(i));
            if (enter != null && enter.getId() == idEnter) {
                cbEnterprise.setSelectedIndex(i);
                break;
            } else {
                i++;
            }
        }
        // set combo box department
        long idDepart = provider.getDataView().getIdDepartment();
        for (int i = 0; i < cbDepartment.getItemCount();) {
            Department depart = ((Department) cbDepartment.getItemAt(i));
            if (depart != null && depart.getId() == idDepart) {
                cbDepartment.setSelectedIndex(i);
                break;
            } else {
                i++;
            }
        }
        controlGeneral.refresh(this);
    }

    @Override
    public void setControlShow(IPanelControlGeneral controlGeneral) {
        this.controlGeneral=controlGeneral;
    }
}
