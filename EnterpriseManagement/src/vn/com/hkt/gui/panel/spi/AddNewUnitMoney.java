/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AddNewUnitMoney.java
 *
 * Created on Mar 20, 2013, 2:22:23 PM
 */
package vn.com.hkt.gui.panel.spi;

import java.util.List;
import org.eclipse.persistence.annotations.Convert;
import vn.com.hkt.data.entity.UnitMoney;
import vn.com.hkt.gui.entity.api.IShowPanel;
import vn.com.hkt.provider.api.IProviderPanelShowListUnitMoney;
import vn.com.hkt.provider.api.IProviderPanelShowUnitMoney;
import vn.com.hkt.provider.spi.ProviderPanelShowListUnitMoney;
import vn.com.hkt.provider.spi.ProviderPanelShowUnitMoney;

/**
 *
 * @author Administrator
 */
public class AddNewUnitMoney extends javax.swing.JPanel implements IShowPanel {

    private IProviderPanelShowListUnitMoney providerMoney;
    private IProviderPanelShowUnitMoney provider;

    /** Creates new form AddNewUnitMoney */
    public AddNewUnitMoney() {
        initComponents();
        provider = new ProviderPanelShowUnitMoney();
        providerMoney = new ProviderPanelShowListUnitMoney();
        showDefaultUnit();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtRatio = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtCode = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cbDefault = new javax.swing.JCheckBox();
        lbDefault = new javax.swing.JLabel();
        lbError = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, java.awt.Color.gray));
        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18));
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Add New Unit Money");
        add(jLabel1);
        jLabel1.setBounds(20, 20, 200, 23);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Set to default :");
        add(jLabel4);
        jLabel4.setBounds(110, 220, 150, 23);
        add(txtRatio);
        txtRatio.setBounds(260, 180, 200, 23);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Code :");
        add(jLabel5);
        jLabel5.setBounds(110, 100, 150, 23);
        add(txtCode);
        txtCode.setBounds(260, 100, 200, 23);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("Name :");
        add(jLabel6);
        jLabel6.setBounds(110, 140, 150, 23);
        add(txtName);
        txtName.setBounds(260, 140, 200, 23);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Ratio with default :");
        add(jLabel7);
        jLabel7.setBounds(110, 180, 150, 23);

        cbDefault.setText("Default");
        cbDefault.setOpaque(false);
        add(cbDefault);
        cbDefault.setBounds(260, 220, 200, 23);

        lbDefault.setFont(new java.awt.Font("Tahoma", 1, 11));
        lbDefault.setText("Default");
        add(lbDefault);
        lbDefault.setBounds(470, 180, 90, 23);

        lbError.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbError.setForeground(new java.awt.Color(255, 0, 0));
        add(lbError);
        lbError.setBounds(260, 260, 200, 23);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbDefault;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel lbDefault;
    private javax.swing.JLabel lbError;
    private javax.swing.JTextField txtCode;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtRatio;
    // End of variables declaration//GEN-END:variables

    @Override
    public List listA() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public boolean checkData() {
        if (txtCode.getText().length() == 0) {
            lbError.setText("Enter unit money code !");
            return false;
        }
        if (txtName.getText().length() == 0) {
            lbError.setText("Enter unit money name !");
            return false;
        }
        if (txtRatio.getText().length() == 0) {
            lbError.setText("Enter ratio with default unit money !");
            return false;
        }
        return true;
    }

    @Override
    public long addData() {
        if (!checkData() || getData()) {
            return 0;
        }
        return 1;
    }

    @Override
    public boolean editData() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public boolean deleteData() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public List listCombo() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    private void showDefaultUnit() {
        List<UnitMoney> unitMoneys = providerMoney.getListInformation();
        if (unitMoneys != null) {
            lbDefault.setText(unitMoneys.toString());
        } else {
            lbDefault.setText("No Default");
        }
    }

    private boolean getData() {
        provider.getDataView().setName(txtName.getText());
        provider.getDataView().setCode(txtCode.getText());
        provider.getDataView().setRatiowithDefault(Long.parseLong(txtRatio.getText()));
        if (cbDefault.isSelected()) {
            provider.getDataView().setIsDefault(true);
        System.out.println("-----------------");
        } else {
            provider.getDataView().setIsDefault(false);
        System.out.println("=================");
        }
        return true;
    }
}
